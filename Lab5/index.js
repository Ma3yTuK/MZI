import * as hf from "./helper_functions.js"
import fs, { existsSync } from 'fs';
import * as sha from './sha1.js';
import * as gost from "./gost.js";
import { StringDecoder } from 'string_decoder';


function main() {
    //console.log(Buffer.from(gost.hash(new Uint8Array([0x32, 0x31, 0x30, 0x39, 0x38, 0x37, 0x36, 0x35, 0x34, 0x33, 0x32, 0x31, 0x30, 0x39, 0x38, 0x37, 0x36, 0x35, 0x34, 0x33, 0x32, 0x31, 0x30, 0x39, 0x38, 0x37, 0x36, 0x35, 0x34, 0x33, 0x32, 0x31, 0x30, 0x39, 0x38, 0x37, 0x36, 0x35, 0x34, 0x33, 0x32, 0x31, 0x30, 0x39, 0x38, 0x37, 0x36, 0x35, 0x34, 0x33, 0x32, 0x31, 0x30, 0x39, 0x38, 0x37, 0x36, 0x35, 0x34, 0x33, 0x32, 0x31, 0x30]), false)).toString("hex"));

    const [,, mode, file, is_long] = process.argv;

    if (!existsSync(file)) {
        console.error("Invalid arguments");
        return;
    }

    const inputFile = fs.readFileSync(file);
    let hash;

    if (mode === "sha1") {
        hash = sha.hash(inputFile);
    } else if (mode === "gost") {
        hash = gost.hash(inputFile, is_long === "long");
    } else {
        console.error("Invalid mode");
        return;
    }

    console.log(`Hash value: ${Buffer.from(hash).toString("hex")}`);
}

main();