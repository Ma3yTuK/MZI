"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.adjustAlpha = adjustAlpha;
var color_1 = require("../../color");
/**
 * Adjusts the alpha of a color.
 * @param color - The color to adjust.
 * @param amount - The new alpha value, from 0 to 1.
 * @returns A new Color instance with adjusted alpha.
 */
function adjustAlpha(color, amount) {
    if (typeof amount !== 'number' || isNaN(amount)) {
        return color; // Return the original color if the input is not a valid number
    }
    var rgb = color.toRgb();
    var newAlpha = Math.max(0, Math.min(1, amount));
    return new color_1.Color(__assign(__assign({}, rgb), { a: newAlpha }));
}
