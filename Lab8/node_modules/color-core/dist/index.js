"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tetradic = exports.square = exports.splitComplementary = exports.shades = exports.monochromatic = exports.doubleSplitComplementary = exports.complementary = exports.analogous = exports.yuvToRgb = exports.xyzToRgb = exports.xyzD65ToD50 = exports.xyzD50ToD65 = exports.srgbToRgb = exports.srgbToLinearSrgb = exports.rgbToYuv = exports.rgbToXyz = exports.rgbToSrgb = exports.rgbToOklch = exports.rgbToOklab = exports.rgbToLch = exports.rgbToLab = exports.rgbToHwb = exports.rgbToHsv = exports.rgbToHsl = exports.rgbToHsi = exports.rgbToHex = exports.rgbToHSLuv = exports.rgbToHPLuv = exports.rgbToCmyk = exports.rgbToCIExyY = exports.rgbToCIELuv = exports.rgbToAdobeRGB = exports.oklchToRgb = exports.oklabToRgb = exports.oklabToLinearSrgb = exports.linearSrgbToSrgb = exports.linearSrgbToOklab = exports.lchToRgb = exports.labToRgb = exports.hwbToRgb = exports.hsvToRgb = exports.hsluvToRgb = exports.hslToRgb = exports.hsiToRgb = exports.hpluvToRgb = exports.hexToRgb = exports.cmykToRgb = exports.ciexyyToRgb = exports.cieLuvToRgb = exports.adobeRGBToRGB = void 0;
exports.getWCAGCompliance = exports.getRelativeLuminance = exports.getContrastRatio = exports.getColorName = exports.getColorInfo = exports.Color = exports.createSequentialScale = exports.createQualitativeScale = exports.createPerceptuallyUniformScale = exports.createMultiHueSequentialScale = exports.createDivergingScale = exports.mix = exports.invert = exports.grayscale = exports.adjustSaturation = exports.adjustLightness = exports.adjustHue = exports.adjustAlpha = exports.triadic = exports.tones = exports.tints = void 0;
/**
 * Color conversion functions
 * These functions allow conversion between various color spaces
 */
var conversions_1 = require("./conversions");
Object.defineProperty(exports, "adobeRGBToRGB", { enumerable: true, get: function () { return conversions_1.adobeRGBToRGB; } });
Object.defineProperty(exports, "cieLuvToRgb", { enumerable: true, get: function () { return conversions_1.cieLuvToRgb; } });
Object.defineProperty(exports, "ciexyyToRgb", { enumerable: true, get: function () { return conversions_1.ciexyyToRgb; } });
Object.defineProperty(exports, "cmykToRgb", { enumerable: true, get: function () { return conversions_1.cmykToRgb; } });
Object.defineProperty(exports, "hexToRgb", { enumerable: true, get: function () { return conversions_1.hexToRgb; } });
Object.defineProperty(exports, "hpluvToRgb", { enumerable: true, get: function () { return conversions_1.hpluvToRgb; } });
Object.defineProperty(exports, "hsiToRgb", { enumerable: true, get: function () { return conversions_1.hsiToRgb; } });
Object.defineProperty(exports, "hslToRgb", { enumerable: true, get: function () { return conversions_1.hslToRgb; } });
Object.defineProperty(exports, "hsluvToRgb", { enumerable: true, get: function () { return conversions_1.hsluvToRgb; } });
Object.defineProperty(exports, "hsvToRgb", { enumerable: true, get: function () { return conversions_1.hsvToRgb; } });
Object.defineProperty(exports, "hwbToRgb", { enumerable: true, get: function () { return conversions_1.hwbToRgb; } });
Object.defineProperty(exports, "labToRgb", { enumerable: true, get: function () { return conversions_1.labToRgb; } });
Object.defineProperty(exports, "lchToRgb", { enumerable: true, get: function () { return conversions_1.lchToRgb; } });
Object.defineProperty(exports, "linearSrgbToOklab", { enumerable: true, get: function () { return conversions_1.linearSrgbToOklab; } });
Object.defineProperty(exports, "linearSrgbToSrgb", { enumerable: true, get: function () { return conversions_1.linearSrgbToSrgb; } });
Object.defineProperty(exports, "oklabToLinearSrgb", { enumerable: true, get: function () { return conversions_1.oklabToLinearSrgb; } });
Object.defineProperty(exports, "oklabToRgb", { enumerable: true, get: function () { return conversions_1.oklabToRgb; } });
Object.defineProperty(exports, "oklchToRgb", { enumerable: true, get: function () { return conversions_1.oklchToRgb; } });
Object.defineProperty(exports, "rgbToAdobeRGB", { enumerable: true, get: function () { return conversions_1.rgbToAdobeRGB; } });
Object.defineProperty(exports, "rgbToCIELuv", { enumerable: true, get: function () { return conversions_1.rgbToCIELuv; } });
Object.defineProperty(exports, "rgbToCIExyY", { enumerable: true, get: function () { return conversions_1.rgbToCIExyY; } });
Object.defineProperty(exports, "rgbToCmyk", { enumerable: true, get: function () { return conversions_1.rgbToCmyk; } });
Object.defineProperty(exports, "rgbToHPLuv", { enumerable: true, get: function () { return conversions_1.rgbToHPLuv; } });
Object.defineProperty(exports, "rgbToHSLuv", { enumerable: true, get: function () { return conversions_1.rgbToHSLuv; } });
Object.defineProperty(exports, "rgbToHex", { enumerable: true, get: function () { return conversions_1.rgbToHex; } });
Object.defineProperty(exports, "rgbToHsi", { enumerable: true, get: function () { return conversions_1.rgbToHsi; } });
Object.defineProperty(exports, "rgbToHsl", { enumerable: true, get: function () { return conversions_1.rgbToHsl; } });
Object.defineProperty(exports, "rgbToHsv", { enumerable: true, get: function () { return conversions_1.rgbToHsv; } });
Object.defineProperty(exports, "rgbToHwb", { enumerable: true, get: function () { return conversions_1.rgbToHwb; } });
Object.defineProperty(exports, "rgbToLab", { enumerable: true, get: function () { return conversions_1.rgbToLab; } });
Object.defineProperty(exports, "rgbToLch", { enumerable: true, get: function () { return conversions_1.rgbToLch; } });
Object.defineProperty(exports, "rgbToOklab", { enumerable: true, get: function () { return conversions_1.rgbToOklab; } });
Object.defineProperty(exports, "rgbToOklch", { enumerable: true, get: function () { return conversions_1.rgbToOklch; } });
Object.defineProperty(exports, "rgbToSrgb", { enumerable: true, get: function () { return conversions_1.rgbToSrgb; } });
Object.defineProperty(exports, "rgbToXyz", { enumerable: true, get: function () { return conversions_1.rgbToXyz; } });
Object.defineProperty(exports, "rgbToYuv", { enumerable: true, get: function () { return conversions_1.rgbToYuv; } });
Object.defineProperty(exports, "srgbToLinearSrgb", { enumerable: true, get: function () { return conversions_1.srgbToLinearSrgb; } });
Object.defineProperty(exports, "srgbToRgb", { enumerable: true, get: function () { return conversions_1.srgbToRgb; } });
Object.defineProperty(exports, "xyzD50ToD65", { enumerable: true, get: function () { return conversions_1.xyzD50ToD65; } });
Object.defineProperty(exports, "xyzD65ToD50", { enumerable: true, get: function () { return conversions_1.xyzD65ToD50; } });
Object.defineProperty(exports, "xyzToRgb", { enumerable: true, get: function () { return conversions_1.xyzToRgb; } });
Object.defineProperty(exports, "yuvToRgb", { enumerable: true, get: function () { return conversions_1.yuvToRgb; } });
/**
 * Color harmony functions
 * These functions generate color harmonies based on color theory
 */
var harmony_1 = require("./harmony");
Object.defineProperty(exports, "analogous", { enumerable: true, get: function () { return harmony_1.analogous; } });
Object.defineProperty(exports, "complementary", { enumerable: true, get: function () { return harmony_1.complementary; } });
Object.defineProperty(exports, "doubleSplitComplementary", { enumerable: true, get: function () { return harmony_1.doubleSplitComplementary; } });
Object.defineProperty(exports, "monochromatic", { enumerable: true, get: function () { return harmony_1.monochromatic; } });
Object.defineProperty(exports, "shades", { enumerable: true, get: function () { return harmony_1.shades; } });
Object.defineProperty(exports, "splitComplementary", { enumerable: true, get: function () { return harmony_1.splitComplementary; } });
Object.defineProperty(exports, "square", { enumerable: true, get: function () { return harmony_1.square; } });
Object.defineProperty(exports, "tetradic", { enumerable: true, get: function () { return harmony_1.tetradic; } });
Object.defineProperty(exports, "tints", { enumerable: true, get: function () { return harmony_1.tints; } });
Object.defineProperty(exports, "tones", { enumerable: true, get: function () { return harmony_1.tones; } });
Object.defineProperty(exports, "triadic", { enumerable: true, get: function () { return harmony_1.triadic; } });
/**
 * Color manipulation functions
 * These functions allow for adjusting various aspects of colors
 */
var manipulation_1 = require("./manipulation");
Object.defineProperty(exports, "adjustAlpha", { enumerable: true, get: function () { return manipulation_1.adjustAlpha; } });
Object.defineProperty(exports, "adjustHue", { enumerable: true, get: function () { return manipulation_1.adjustHue; } });
Object.defineProperty(exports, "adjustLightness", { enumerable: true, get: function () { return manipulation_1.adjustLightness; } });
Object.defineProperty(exports, "adjustSaturation", { enumerable: true, get: function () { return manipulation_1.adjustSaturation; } });
Object.defineProperty(exports, "grayscale", { enumerable: true, get: function () { return manipulation_1.grayscale; } });
Object.defineProperty(exports, "invert", { enumerable: true, get: function () { return manipulation_1.invert; } });
Object.defineProperty(exports, "mix", { enumerable: true, get: function () { return manipulation_1.mix; } });
/**
 * Color scale functions
 * These functions generate color scales based on color theory
 */
var scales_1 = require("./scales");
Object.defineProperty(exports, "createDivergingScale", { enumerable: true, get: function () { return scales_1.createDivergingScale; } });
Object.defineProperty(exports, "createMultiHueSequentialScale", { enumerable: true, get: function () { return scales_1.createMultiHueSequentialScale; } });
Object.defineProperty(exports, "createPerceptuallyUniformScale", { enumerable: true, get: function () { return scales_1.createPerceptuallyUniformScale; } });
Object.defineProperty(exports, "createQualitativeScale", { enumerable: true, get: function () { return scales_1.createQualitativeScale; } });
Object.defineProperty(exports, "createSequentialScale", { enumerable: true, get: function () { return scales_1.createSequentialScale; } });
/**
 * Unified Color Class
 * This class provides a comprehensive way to work with colors
 */
var color_1 = require("./color");
Object.defineProperty(exports, "Color", { enumerable: true, get: function () { return color_1.Color; } });
/**
 * @description getColorInfo and getColorName
 * Axios functions for color name and information
 * These functions can be used to fetch color name and information from the Color.pizza API
 *
 */
var utils_1 = require("./utils");
Object.defineProperty(exports, "getColorInfo", { enumerable: true, get: function () { return utils_1.getColorInfo; } });
Object.defineProperty(exports, "getColorName", { enumerable: true, get: function () { return utils_1.getColorName; } });
var accessability_1 = require("./accessability");
Object.defineProperty(exports, "getContrastRatio", { enumerable: true, get: function () { return accessability_1.getContrastRatio; } });
Object.defineProperty(exports, "getRelativeLuminance", { enumerable: true, get: function () { return accessability_1.getRelativeLuminance; } });
Object.defineProperty(exports, "getWCAGCompliance", { enumerable: true, get: function () { return accessability_1.getWCAGCompliance; } });
