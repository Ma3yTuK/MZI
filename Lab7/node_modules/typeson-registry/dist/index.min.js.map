{"version":3,"file":"index.min.js","sources":["../node_modules/.pnpm/typeson@9.0.3/node_modules/typeson/dist/typeson.esm.min.js","../node_modules/.pnpm/base64-arraybuffer-es6@3.1.0/node_modules/base64-arraybuffer-es6/dist/base64-arraybuffer-es.js","../types/arraybuffer.js","../types/bigint-object.js","../types/bigint.js","../utils/stringArrayBuffer.js","../types/blob.js","../utils/generateUUID.js","../types/cloneable.js","../types/cryptokey.js","../types/dataview.js","../types/date.js","../types/domexception.js","../types/dommatrix.js","../types/dompoint.js","../types/domquad.js","../types/domrect.js","../types/error.js","../types/errors.js","../types/file.js","../types/filelist.js","../types/imagebitmap.js","../types/imagedata.js","../types/infinity.js","../types/intl-types.js","../types/map.js","../types/nan.js","../types/negative-infinity.js","../types/negative-zero.js","../types/nonbuiltin-ignore.js","../types/primitive-objects.js","../types/promise.js","../types/regexp.js","../types/resurrectable.js","../types/set.js","../types/symbol.js","../types/typed-arrays-socketio.js","../types/typed-arrays.js","../types/undef.js","../types/user-object.js","../presets/array-nonindex-keys.js","../presets/special-numbers.js","../presets/builtin.js","../presets/postmessage.js","../presets/socketio.js","../presets/sparse-undefined.js","../presets/structured-cloning.js","../presets/structured-cloning-throwing.js","../presets/undef.js","../presets/universal.js"],"sourcesContent":["function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(r),!0).forEach((function(t){_defineProperty(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function _typeof(e){return _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},_typeof(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,_toPropertyKey(n.key),n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}function _defineProperty(e,t,r){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _slicedToArray(e,t){return function _arrayWithHoles(e){if(Array.isArray(e))return e}(e)||function _iterableToArrayLimit(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,o,i,a,c=[],s=!0,u=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;s=!1}else for(;!(s=(n=i.call(r)).done)&&(c.push(n.value),c.length!==t);s=!0);}catch(e){u=!0,o=e}finally{try{if(!s&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(u)throw o}}return c}}(e,t)||_unsupportedIterableToArray(e,t)||function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function _toConsumableArray(e){return function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}(e)||function _iterableToArray(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||_unsupportedIterableToArray(e)||function _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function _unsupportedIterableToArray(e,t){if(e){if(\"string\"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function _toPropertyKey(e){var t=function _toPrimitive(e,t){if(\"object\"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==typeof t?t:String(t)}var e=_createClass((function TypesonPromise(e){_classCallCheck(this,TypesonPromise),this.p=new Promise(e)}));e.__typeson__type__=\"TypesonPromise\",\"undefined\"!=typeof Symbol&&Object.defineProperty(e.prototype,Symbol.toStringTag,{get:function get(){return\"TypesonPromise\"}}),e.prototype.then=function(t,r){var n=this;return new e((function(e,o){n.p.then((function(r){e(t?t(r):r)})).catch((function(e){return r?r(e):Promise.reject(e)})).then(e,o)}))},e.prototype.catch=function(e){return this.then((function(){}),e)},e.resolve=function(t){return new e((function(e){e(t)}))},e.reject=function(t){return new e((function(e,r){r(t)}))},e.all=function(t){return new e((function(e,r){Promise.all(t.map((function(e){return null!=e&&e.constructor&&\"__typeson__type__\"in e.constructor&&\"TypesonPromise\"===e.constructor.__typeson__type__?e.p:e}))).then(e,r)}))},e.race=function(t){return new e((function(e,r){Promise.race(t.map((function(e){return null!=e&&e.constructor&&\"__typeson__type__\"in e.constructor&&\"TypesonPromise\"===e.constructor.__typeson__type__?e.p:e}))).then(e,r)}))},e.allSettled=function(t){return new e((function(e,r){Promise.allSettled(t.map((function(e){return null!=e&&e.constructor&&\"__typeson__type__\"in e.constructor&&\"TypesonPromise\"===e.constructor.__typeson__type__?e.p:e}))).then(e,r)}))};var t=Object.hasOwn,r=Object.getPrototypeOf;function isThenable(e,t){return isObject(e)&&\"function\"==typeof e.then&&(!t||\"function\"==typeof e.catch)}function toStringTag(e){return Object.prototype.toString.call(e).slice(8,-1)}function hasConstructorOf(e,n){if(!e||\"object\"!==_typeof(e))return!1;var o=r(e);if(!o)return null===n;var i=t(o,\"constructor\")&&o.constructor;return\"function\"!=typeof i?null===n:n===i||(null!==n&&Function.prototype.toString.call(i)===Function.prototype.toString.call(n)||\"function\"==typeof n&&\"string\"==typeof i.__typeson__type__&&i.__typeson__type__===n.__typeson__type__)}function isPlainObject(e){return!(!e||\"Object\"!==toStringTag(e))&&(!r(e)||hasConstructorOf(e,Object))}function isUserObject(e){if(!e||\"Object\"!==toStringTag(e))return!1;var t=r(e);return!t||(hasConstructorOf(e,Object)||isUserObject(t))}function isObject(e){return null!==e&&\"object\"===_typeof(e)}function escapeKeyPathComponent(e){return e.replaceAll(\"''\",\"''''\").replace(/^$/,\"''\").replaceAll(\"~\",\"~0\").replaceAll(\".\",\"~1\")}function unescapeKeyPathComponent(e){return e.replaceAll(\"~1\",\".\").replaceAll(\"~0\",\"~\").replace(/^''$/,\"\").replaceAll(\"''''\",\"''\")}function getByKeyPath(e,t){if(\"\"===t)return e;if(null===e||\"object\"!==_typeof(e))throw new TypeError(\"Unexpected non-object type\");var r=t.indexOf(\".\");if(r>-1){var n=e[unescapeKeyPathComponent(t.slice(0,r))];return void 0===n?void 0:getByKeyPath(n,t.slice(r+1))}return e[unescapeKeyPathComponent(t)]}function setAtKeyPath(e,t,r){if(\"\"===t)return r;if(!e||\"object\"!==_typeof(e))throw new TypeError(\"Unexpected non-object type\");var n=t.indexOf(\".\");return n>-1?setAtKeyPath(e[unescapeKeyPathComponent(t.slice(0,n))],t.slice(n+1),r):(e[unescapeKeyPathComponent(t)]=r,e)}function getJSONType(e){return null===e?\"null\":Array.isArray(e)?\"array\":_typeof(e)}function _await(e,t,r){return r?t?t(e):e:(e&&e.then||(e=Promise.resolve(e)),t?e.then(t):e)}var n=Object.keys,o=Object.hasOwn,i=Array.isArray,a=[\"type\",\"replaced\",\"iterateIn\",\"iterateUnsetNumeric\",\"addLength\"];function _async(e){return function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];try{return Promise.resolve(e.apply(this,t))}catch(e){return Promise.reject(e)}}}function nestedPathsFirst(e,t){var r,n;if(\"\"===e.keypath)return-1;var o=null!==(r=e.keypath.match(/\\./g))&&void 0!==r?r:0,i=null!==(n=t.keypath.match(/\\./g))&&void 0!==n?n:0;return o&&(o=o.length),i&&(i=i.length),o>i?-1:o<i?1:e.keypath<t.keypath?-1:e.keypath>t.keypath?1:0}var c=function(){function Typeson(e){_classCallCheck(this,Typeson),this.options=e,this.plainObjectReplacers=[],this.nonplainObjectReplacers=[],this.revivers={},this.types={}}return _createClass(Typeson,[{key:\"stringify\",value:function stringify(e,t,r,n){n=_objectSpread2(_objectSpread2(_objectSpread2({},this.options),n),{},{stringification:!0});var o=this.encapsulate(e,null,n);return i(o)?JSON.stringify(o[0],t,r):o.then((function(e){return JSON.stringify(e,t,r)}))}},{key:\"stringifySync\",value:function stringifySync(e,t,r,n){return this.stringify(e,t,r,_objectSpread2(_objectSpread2({throwOnBadSyncType:!0},n),{},{sync:!0}))}},{key:\"stringifyAsync\",value:function stringifyAsync(e,t,r,n){return this.stringify(e,t,r,_objectSpread2(_objectSpread2({throwOnBadSyncType:!0},n),{},{sync:!1}))}},{key:\"parse\",value:function parse(e,t,r){return r=_objectSpread2(_objectSpread2(_objectSpread2({},this.options),r),{},{parse:!0}),this.revive(JSON.parse(e,t),r)}},{key:\"parseSync\",value:function parseSync(e,t,r){return this.parse(e,t,_objectSpread2(_objectSpread2({throwOnBadSyncType:!0},r),{},{sync:!0}))}},{key:\"parseAsync\",value:function parseAsync(e,t,r){return this.parse(e,t,_objectSpread2(_objectSpread2({throwOnBadSyncType:!0},r),{},{sync:!1}))}},{key:\"specialTypeNames\",value:function specialTypeNames(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return r.returnTypeNames=!0,this.encapsulate(e,t,r)}},{key:\"rootTypeName\",value:function rootTypeName(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return r.iterateNone=!0,this.encapsulate(e,t,r)}},{key:\"encapsulate\",value:function encapsulate(t,r,c){var s=this,u=_objectSpread2(_objectSpread2({sync:!0},this.options),c),l=u.sync,y={},p=[],f=[],v=[],h=!(\"cyclic\"in u)||u.cyclic,d=u.encapsulateObserver,b=function finish(e){var t=Object.values(y);if(u.iterateNone)return t.length?t[0]:getJSONType(e);if(t.length){if(u.returnTypeNames)return _toConsumableArray(new Set(t));e&&isPlainObject(e)&&!o(e,\"$types\")?e.$types=y:e={$:e,$types:{$:y}}}else isObject(e)&&o(e,\"$types\")&&(e={$:e,$types:!0});return!u.returnTypeNames&&e},_=_async((function(t,r){return _await(Promise.all(r.map((function(e){return e[1].p}))),(function(n){return _await(Promise.all(n.map(_async((function(n){var o=!1,i=[],a=_slicedToArray(r.splice(0,1),1),c=_slicedToArray(a[0],7),s=c[0],u=c[2],l=c[3],y=c[4],p=c[5],f=c[6],v=m(s,n,u,l,i,!0,f),h=hasConstructorOf(v,e);return function _invoke(e,t){var r=e();return r&&r.then?r.then(t):t(r)}((function(){if(s&&h)return _await(v.p,(function(e){y[p]=e;var r=_(t,i);return o=!0,r}))}),(function(e){return o?e:(s?y[p]=v:t=h?v.p:v,_(t,i))}))})))),(function(){return t}))}))})),O=function _adaptBuiltinStateObjectProperties(e,t,r){Object.assign(e,t);var n=a.map((function(t){var r=e[t];return delete e[t],r}));r(),a.forEach((function(t,r){e[t]=n[r]}))},m=function _encapsulate(t,r,a,c,l,v,h){var b,_={},m=_typeof(r),g=d?function(n){var o,i=null!==(o=null!=h?h:c.type)&&void 0!==o?o:getJSONType(r);d(Object.assign(null!=n?n:_,{keypath:t,value:r,cyclic:a,stateObj:c,promisesData:l,resolvingTypesonPromise:v,awaitingTypesonPromise:hasConstructorOf(r,e)},{type:i}))}:null;if([\"string\",\"boolean\",\"number\",\"undefined\"].includes(m))return void 0===r||Number.isNaN(r)||r===Number.NEGATIVE_INFINITY||r===Number.POSITIVE_INFINITY||0===r?(b=c.replaced?r:j(t,r,c,l,!1,v,g))!==r&&(_={replaced:b}):b=r,g&&g(),b;if(null===r)return g&&g(),r;if(a&&!c.iterateIn&&!c.iterateUnsetNumeric&&r&&\"object\"===_typeof(r)){var S=p.indexOf(r);if(!(S<0))return y[t]=\"#\",g&&g({cyclicKeypath:f[S]}),\"#\"+f[S];!0===a&&(p.push(r),f.push(t))}var P,T,w=isPlainObject(r),A=i(r),C=(w||A)&&(!s.plainObjectReplacers.length||c.replaced)||c.iterateIn?r:j(t,r,c,l,w||A,null,g);if(C!==r?(b=C,_={replaced:C}):\"\"===t&&hasConstructorOf(r,e)?(l.push([t,r,a,c,void 0,void 0,c.type]),b=r):A&&\"object\"!==c.iterateIn||\"array\"===c.iterateIn?(P=new Array(r.length),_={clone:P}):([\"function\",\"symbol\"].includes(_typeof(r))||\"toJSON\"in r||hasConstructorOf(r,e)||hasConstructorOf(r,Promise)||hasConstructorOf(r,ArrayBuffer))&&!w&&\"object\"!==c.iterateIn?b=r:(P={},c.addLength&&(P.length=r.length),_={clone:P}),g&&g(),u.iterateNone)return null!==(T=P)&&void 0!==T?T:b;if(!P)return b;if(c.iterateIn){var k=function _loop(n){var i={ownKeys:o(r,n)};O(c,i,(function(){var o=t+(t?\".\":\"\")+escapeKeyPathComponent(n),i=_encapsulate(o,r[n],Boolean(a),c,l,v);hasConstructorOf(i,e)?l.push([o,i,Boolean(a),c,P,n,c.type]):void 0!==i&&(P[n]=i)}))};for(var N in r)k(N);g&&g({endIterateIn:!0,end:!0})}else n(r).forEach((function(n){var o=t+(t?\".\":\"\")+escapeKeyPathComponent(n);O(c,{ownKeys:!0},(function(){var t=_encapsulate(o,r[n],Boolean(a),c,l,v);hasConstructorOf(t,e)?l.push([o,t,Boolean(a),c,P,n,c.type]):void 0!==t&&(P[n]=t)}))})),g&&g({endIterateOwn:!0,end:!0});if(c.iterateUnsetNumeric){for(var I=r.length,E=function _loop2(n){if(!(n in r)){var o=\"\".concat(t).concat(t?\".\":\"\").concat(n);O(c,{ownKeys:!1},(function(){var t=_encapsulate(o,void 0,Boolean(a),c,l,v);hasConstructorOf(t,e)?l.push([o,t,Boolean(a),c,P,n,c.type]):void 0!==t&&(P[n]=t)}))}},K=0;K<I;K++)E(K);g&&g({endIterateUnsetNumeric:!0,end:!0})}return P},j=function replace(e,t,r,n,o,i,a){for(var c=o?s.plainObjectReplacers:s.nonplainObjectReplacers,u=c.length;u--;){var p=c[u];if(p.test(t,r)){var f=p.type;if(s.revivers[f]){var v=y[e];y[e]=v?[f].concat(v):f}if(Object.assign(r,{type:f,replaced:!0}),(l||!p.replaceAsync)&&!p.replace)return a&&a({typeDetected:!0}),m(e,t,h&&\"readonly\",r,n,i,f);a&&a({replacing:!0});var d=void 0;if(l||!p.replaceAsync){if(void 0===p.replace)throw new TypeError(\"Missing replacer\");d=p.replace(t,r)}else d=p.replaceAsync(t,r);return m(e,d,h&&\"readonly\",r,n,i,f)}}return t},g=m(\"\",t,h,null!=r?r:{},v);if(v.length)return l&&u.throwOnBadSyncType?function(){throw new TypeError(\"Sync method requested but async result obtained\")}():Promise.resolve(_(g,v)).then(b);if(!l&&u.throwOnBadSyncType)throw new TypeError(\"Async method requested but sync result obtained\");return u.stringification&&l?[b(g)]:l?b(g):Promise.resolve(b(g))}},{key:\"encapsulateSync\",value:function encapsulateSync(e,t,r){return this.encapsulate(e,t,_objectSpread2(_objectSpread2({throwOnBadSyncType:!0},r),{},{sync:!0}))}},{key:\"encapsulateAsync\",value:function encapsulateAsync(e,t,r){return this.encapsulate(e,t,_objectSpread2(_objectSpread2({throwOnBadSyncType:!0},r),{},{sync:!1}))}},{key:\"revive\",value:function revive(t,r){var o=this,a=_objectSpread2(_objectSpread2({sync:!0},this.options),r),c=a.sync;function finishRevival(e){if(c)return e;if(a.throwOnBadSyncType)throw new TypeError(\"Async method requested but sync result obtained\");return Promise.resolve(e)}if(!t||\"object\"!==_typeof(t)||Array.isArray(t))return finishRevival(t);var u=t.$types;if(!0===u)return finishRevival(t.$);if(!u||\"object\"!==_typeof(u)||Array.isArray(u))return finishRevival(t);var l=[],y={},p=!0;u.$&&isPlainObject(u.$)&&(t=t.$,u=u.$,p=!1);var f=function executeReviver(e,t){var r,n=_slicedToArray(null!==(r=o.revivers[e])&&void 0!==r?r:[],1)[0];if(!n)throw new Error(\"Unregistered type: \"+e);if(c&&!(\"revive\"in n))return t;if(!c&&n.reviveAsync)return n.reviveAsync(t,y);if(n.revive)return n.revive(t,y);throw new Error(\"Missing reviver\")},v=[];function checkUndefined(e){return hasConstructorOf(e,s)?void 0:e}var h,d=function revivePlainObjects(){var r=[];if(!u)throw new Error(\"Found bad `types`\");if(Object.entries(u).forEach((function(e){var t=_slicedToArray(e,2),n=t[0],i=t[1];\"#\"!==i&&[].concat(i).forEach((function(e){var t;_slicedToArray(null!==(t=o.revivers[e])&&void 0!==t?t:[null,{}],2)[1].plain&&(r.push({keypath:n,type:e}),delete u[n])}))})),r.length)return r.sort(nestedPathsFirst).reduce((function reducer(r,n){var o=n.keypath,i=n.type;if(isThenable(r))return r.then((function(e){return reducer(e,{keypath:o,type:i})}));var a=getByKeyPath(t,o);if(hasConstructorOf(a=f(i,a),e))return a.then((function(e){var r=setAtKeyPath(t,o,e);r===e&&(t=r)}));var c=setAtKeyPath(t,o,a);c===a&&(t=c)}),void 0)}();return hasConstructorOf(d,e)?h=d.then((function(){return t})):(h=function _revive(t,r,o,a,c){if(!p||\"$types\"!==t){var y=u[t],h=i(r);if(h||isPlainObject(r)){var d=h?new Array(r.length):{};for(n(r).forEach((function(n){var i=_revive(t+(t?\".\":\"\")+escapeKeyPathComponent(n),r[n],null!=o?o:d,d,n),a=function set(e){return hasConstructorOf(e,s)?d[n]=void 0:void 0!==e&&(d[n]=e),e};hasConstructorOf(i,e)?v.push(i.then((function(e){return a(e)}))):a(i)})),r=d;l.length;){var b=_slicedToArray(l[0],4),_=b[0],O=b[1],m=b[2],j=b[3],g=getByKeyPath(_,O);if(void 0===g)break;m[j]=g,l.splice(0,1)}}if(!y)return r;if(\"#\"===y){var S=getByKeyPath(o,r.slice(1));return void 0===S&&l.push([o,r.slice(1),a,c]),S}return[].concat(y).reduce((function reducer(t,r){if(hasConstructorOf(t,e))return t.then((function(e){return reducer(e,r)}));if(\"string\"!=typeof r)throw new TypeError(\"Bad type JSON\");return f(r,t)}),r)}}(\"\",t,null),v.length&&(h=e.resolve(h).then((function(t){return e.all([t].concat(v))})).then((function(e){return _slicedToArray(e,1)[0]})))),isThenable(h)?c&&a.throwOnBadSyncType?function(){throw new TypeError(\"Sync method requested but async result obtained\")}():hasConstructorOf(h,e)?h.p.then(checkUndefined):h:!c&&a.throwOnBadSyncType?function(){throw new TypeError(\"Async method requested but sync result obtained\")}():c?checkUndefined(h):Promise.resolve(checkUndefined(h))}},{key:\"reviveSync\",value:function reviveSync(e,t){return this.revive(e,_objectSpread2(_objectSpread2({throwOnBadSyncType:!0},t),{},{sync:!0}))}},{key:\"reviveAsync\",value:function reviveAsync(e,t){return this.revive(e,_objectSpread2(_objectSpread2({throwOnBadSyncType:!0},t),{},{sync:!1}))}},{key:\"register\",value:function register(e,t){var r=this,o=null!=t?t:{},a=function R(e){i(e)?e.forEach((function(e){return R(e)})):n(e).forEach((function(t){var n;if(\"#\"===t)throw new TypeError(\"# cannot be used as a type name as it is reserved for cyclic objects\");if(u.includes(t))throw new TypeError(\"Plain JSON object types are reserved as type names\");var a=e[t],c=a&&\"function\"!=typeof a&&!Array.isArray(a)&&a.testPlainObjects?r.plainObjectReplacers:r.nonplainObjectReplacers,s=c.filter((function(e){return e.type===t}));if(s.length&&(c.splice(c.indexOf(s[0]),1),delete r.revivers[t],delete r.types[t]),\"function\"==typeof a){var l=a;a={test:function test(e){return e&&e.constructor===l},replace:function replace(e){return _objectSpread2({},e)},revive:function revive(e){return Object.assign(Object.create(l.prototype),e)}}}else if(i(a)){var y=_slicedToArray(a,3);a={test:y[0],replace:y[1],revive:y[2]}}if(null!==(n=a)&&void 0!==n&&n.test){var p={type:t,test:a.test.bind(a)};a.replace&&(p.replace=a.replace.bind(a)),a.replaceAsync&&(p.replaceAsync=a.replaceAsync.bind(a));var f=\"number\"==typeof o.fallback?o.fallback:o.fallback?0:Number.POSITIVE_INFINITY;if(a.testPlainObjects?r.plainObjectReplacers.splice(f,0,p):r.nonplainObjectReplacers.splice(f,0,p),a.revive||a.reviveAsync){var v={};a.revive&&(v.revive=a.revive.bind(a)),a.reviveAsync&&(v.reviveAsync=a.reviveAsync.bind(a)),r.revivers[t]=[v,{plain:a.testPlainObjects}]}r.types[t]=a}}))};return[].concat(e).forEach((function(e){return a(e)})),this}}]),Typeson}(),s=_createClass((function Undefined(){_classCallCheck(this,Undefined)}));s.__typeson__type__=\"TypesonUndefined\";var u=[\"null\",\"boolean\",\"number\",\"string\",\"array\",\"object\"];export{u as JSON_TYPES,c as Typeson,e as TypesonPromise,s as Undefined,escapeKeyPathComponent,getByKeyPath,getJSONType,hasConstructorOf,isObject,isPlainObject,isThenable,isUserObject,setAtKeyPath,toStringTag,unescapeKeyPathComponent};\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2017-2023 Brett Zamir, 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\n/**\n * @typedef {number} Integer\n */\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n// Use a lookup table to find the index.\nvar lookup = new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n  lookup[/** @type {number} */chars.codePointAt(i)] = i;\n}\n\n/**\n * @param {ArrayBuffer} arraybuffer\n * @param {Integer} [byteOffset]\n * @param {Integer} [lngth]\n * @returns {string}\n */\nvar encode = function encode(arraybuffer, byteOffset, lngth) {\n  if (lngth === null || lngth === undefined) {\n    lngth = arraybuffer.byteLength; // Needed for Safari\n  }\n\n  var bytes = new Uint8Array(arraybuffer, byteOffset || 0,\n  // Default needed for Safari\n  lngth);\n  var len = bytes.length;\n  var base64 = '';\n  for (var _i = 0; _i < len; _i += 3) {\n    base64 += chars[bytes[_i] >> 2];\n    base64 += chars[(bytes[_i] & 3) << 4 | bytes[_i + 1] >> 4];\n    base64 += chars[(bytes[_i + 1] & 15) << 2 | bytes[_i + 2] >> 6];\n    base64 += chars[bytes[_i + 2] & 63];\n  }\n  if (len % 3 === 2) {\n    base64 = base64.slice(0, -1) + '=';\n  } else if (len % 3 === 1) {\n    base64 = base64.slice(0, -2) + '==';\n  }\n  return base64;\n};\n\n/**\n * @param {string} base64\n * @param {{\n *   maxByteLength: number\n * }} [options]\n * @returns {ArrayBuffer}\n */\nvar decode = function decode(base64, options) {\n  var len = base64.length;\n  if (len % 4) {\n    throw new Error('Bad base64 length: not divisible by four');\n  }\n  var bufferLength = base64.length * 0.75;\n  var p = 0;\n  var encoded1, encoded2, encoded3, encoded4;\n  if (base64[base64.length - 1] === '=') {\n    bufferLength--;\n    if (base64[base64.length - 2] === '=') {\n      bufferLength--;\n    }\n  }\n\n  // @ts-expect-error Second argument is not yet standard\n  var arraybuffer = new ArrayBuffer(bufferLength, options),\n    bytes = new Uint8Array(arraybuffer);\n  for (var _i2 = 0; _i2 < len; _i2 += 4) {\n    // We know the result will not be undefined, as we have a text\n    //   length divisible by four\n    encoded1 = lookup[/** @type {number} */base64.codePointAt(_i2)];\n    encoded2 = lookup[/** @type {number} */base64.codePointAt(_i2 + 1)];\n    encoded3 = lookup[/** @type {number} */base64.codePointAt(_i2 + 2)];\n    encoded4 = lookup[/** @type {number} */base64.codePointAt(_i2 + 3)];\n    bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n    bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n    bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n  }\n  return arraybuffer;\n};\n\nexport { decode, encode };\n","import {toStringTag} from 'typeson';\nimport {encode, decode} from 'base64-arraybuffer-es6';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst arraybuffer = {\n    arraybuffer: {\n        test (x) { return toStringTag(x) === 'ArrayBuffer'; },\n        replace (\n            b,\n            /**\n             * @type {import('typeson').StateObject &\n             *   {buffers?: ArrayBuffer[]}}\n             */\n            stateObj\n        ) {\n            if (!stateObj.buffers) {\n                stateObj.buffers = [];\n            }\n            const index = stateObj.buffers.indexOf(b);\n            if (index > -1) {\n                return {index};\n            }\n            stateObj.buffers.push(b);\n            return {\n                s: encode(b),\n                maxByteLength: b.maxByteLength,\n                resizable: b.resizable\n            };\n        },\n        revive (\n            b64,\n            /**\n             * @type {import('typeson').StateObject &\n             *   {buffers?: ArrayBuffer[]}}\n             */\n            stateObj\n        ) {\n            if (!stateObj.buffers) {\n                stateObj.buffers = [];\n            }\n            if (Object.hasOwn(b64, 'index')) {\n                return stateObj.buffers[\n                    /**\n                     * @type {{index: import('typeson').Integer}}\n                     */\n                    (b64).index\n                ];\n            }\n            const buffer = decode(\n                /** @type {string} */ (b64.s),\n                b64.resizable\n                    // todo[engine:node@>20]: Remove comment\n                    /* c8 ignore next -- Node >= 20 */\n                    ? {maxByteLength: b64.maxByteLength}\n                    : undefined\n            );\n            stateObj.buffers.push(buffer);\n            return buffer;\n        }\n    }\n};\n\nexport default arraybuffer;\n\n// See also typed-arrays!\n","import {hasConstructorOf} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst bigintObject = {\n    bigintObject: {\n        test (x) {\n            return typeof x === 'object' && hasConstructorOf(x, BigInt);\n        },\n        replace: String,\n        revive (s) {\n            return new Object(BigInt(/** @type {string} */ (s)));\n        }\n    }\n};\n\nexport default bigintObject;\n","/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst bigint = {\n    bigint: {\n        test (x) {\n            return typeof x === 'bigint';\n        },\n        replace: String,\n        // eslint-disable-next-line @stylistic/max-len -- Long\n        // eslint-disable-next-line unicorn/prefer-native-coercion-functions -- Clearer\n        revive (s) {\n            return BigInt(/** @type {string} */ (s));\n        }\n    }\n};\n\nexport default bigint;\n","/**\n * Not currently in use internally, but provided for parity.\n * @param {ArrayBuffer} buf\n * @returns {string}\n */\nfunction arraybuffer2string (buf) {\n    return new Uint8Array(buf).reduce(\n        (s, byte) => s + String.fromCodePoint(byte), ''\n    );\n}\n\n/**\n *\n * @param {string} str\n * @returns {ArrayBuffer}\n */\nfunction string2arraybuffer (str) {\n    /*\n    // UTF-8 approaches\n    const utf8 = unescape(encodeURIComponent(str));\n    const arr = new Uint8Array(utf8.length);\n    for (let i = 0; i < utf8.length; i++) {\n        arr[i] = utf8.charCodeAt(i);\n    }\n    return arr.buffer;\n\n    const utf8 = [];\n    for (let i = 0; i < str.length; i++) {\n        let charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n            utf8.push(0xc0 | (charcode >> 6),\n                0x80 | (charcode & 0x3f));\n        } else if (charcode < 0xd800 || charcode >= 0xe000) {\n            utf8.push(0xe0 | (charcode >> 12),\n                0x80 | ((charcode >> 6) & 0x3f),\n                0x80 | (charcode & 0x3f));\n        // surrogate pair\n        } else {\n            i++;\n            // UTF-16 encodes 0x10000-0x10FFFF by\n            // subtracting 0x10000 and splitting the\n            // 20 bits of 0x0-0xFFFFF into two halves\n            charcode = 0x10000 + (((charcode & 0x3ff) << 10) |\n                (str.charCodeAt(i) & 0x3ff));\n            utf8.push(0xf0 | (charcode >> 18),\n                0x80 | ((charcode >> 12) & 0x3f),\n                0x80 | ((charcode >> 6) & 0x3f),\n                0x80 | (charcode & 0x3f));\n        }\n    }\n    return utf8;\n    */\n    /*\n    // Working UTF-16 options (equivalents)\n    const buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n    const bufView = new Uint16Array(buf);\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\n        bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n    */\n\n    const array = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n        // eslint-disable-next-line @stylistic/max-len -- Long\n        // eslint-disable-next-line unicorn/prefer-code-point -- Iterating char. codes\n        array[i] = str.charCodeAt(i); // & 0xff;\n    }\n    return array.buffer;\n}\nexport {arraybuffer2string, string2arraybuffer};\n","/* globals XMLHttpRequest, FileReader -- Polyfills */\nimport {TypesonPromise, toStringTag} from 'typeson';\nimport {\n    string2arraybuffer, arraybuffer2string\n} from '../utils/stringArrayBuffer.js';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst blob = {\n    blob: {\n        test (x) { return toStringTag(x) === 'Blob'; },\n        replace (b) { // Sync\n            const req = new XMLHttpRequest();\n            req.overrideMimeType('text/plain; charset=x-user-defined');\n            req.open('GET', URL.createObjectURL(b), false); // Sync\n            req.send();\n\n            // Seems not feasible to accurately simulate\n            /* c8 ignore next 3 */\n            if (req.status !== 200 && req.status !== 0) {\n                throw new Error('Bad Blob access: ' + req.status);\n            }\n            return {\n                type: b.type,\n                stringContents: req.responseText\n            };\n        },\n        revive (obj) {\n            const {\n                type, stringContents\n            } = /** @type {{type: string, stringContents: string}} */ (obj);\n            return new Blob([string2arraybuffer(stringContents)], {type});\n        },\n        replaceAsync (b) {\n            return new TypesonPromise((resolve, reject) => {\n                /*\n                if (b.isClosed) { // On MDN, but not in https://w3c.github.io/FileAPI/#dfn-Blob\n                    reject(new Error('The Blob is closed'));\n                    return;\n                }\n                */\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    resolve({\n                        type: b.type,\n                        stringContents: arraybuffer2string(\n                            /** @type {ArrayBuffer} */ (reader.result)\n                        )\n                    });\n                });\n                // Seems not feasible to accurately simulate\n                /* c8 ignore next 3 */\n                reader.addEventListener('error', () => {\n                    reject(reader.error);\n                });\n                // eslint-disable-next-line @stylistic/max-len -- Long\n                // eslint-disable-next-line unicorn/prefer-blob-reading-methods -- Too new?\n                reader.readAsArrayBuffer(b);\n            });\n        }\n    }\n};\n\nexport default blob;\n","/**\n * @todo We could use `import generateUUID from 'uuid/v4';` (but it needs\n *   crypto library, etc.; `rollup-plugin-node-builtins` doesn't recommend\n *   using its own version and though there is <https://www.npmjs.com/package/crypto-browserify>,\n *   it may be troublesome to bundle and not strongly needed)\n * @returns {string}\n */\nexport default function generateUUID () { //  Adapted from original: public domain/MIT: http://stackoverflow.com/a/8809472/271577\n    /* c8 ignore next */\n    let d = Date.now();\n\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replaceAll(/[xy]/gu, function (c) {\n        /* eslint-disable no-bitwise, sonarjs/pseudo-random -- Convenient */\n        const r = Math.trunc((d + (Math.random() * 16)) % 16);\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : ((r & 0x3) | 0x8)).toString(16);\n        /* eslint-enable no-bitwise, sonarjs/pseudo-random -- Convenient */\n    });\n}\n","import generateUUID from '../utils/generateUUID.js';\n\n/**\n * @type {{[key: (symbol|string)]: any}}\n */\nconst cloneableObjectsByUUID = {};\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst cloneable = {\n    cloneable: {\n        test (x) {\n            return x && typeof x === 'object' &&\n                typeof x[Symbol.for('cloneEncapsulate')] === 'function';\n        },\n        replace (clonable) {\n            const encapsulated = clonable[Symbol.for('cloneEncapsulate')]();\n            const uuid = generateUUID();\n            cloneableObjectsByUUID[uuid] = clonable;\n            return {uuid, encapsulated};\n        },\n        revive (obj) {\n            const {\n                uuid, encapsulated\n            } = /** @type {{uuid: string, encapsulated: any}} */ (obj);\n\n            return cloneableObjectsByUUID[uuid][Symbol.for('cloneRevive')](\n                encapsulated\n            );\n        }\n    }\n};\n\nexport default cloneable;\n","import {TypesonPromise, toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst cryptokey = {\n    cryptokey: {\n        test (x) {\n            return toStringTag(x) === 'CryptoKey' && x.extractable;\n        },\n        replaceAsync (\n            /** @type {CryptoKey} */\n            key\n        ) {\n            return new TypesonPromise(async (resolve, reject) => {\n                /** @type {JsonWebKey} */\n                let jwk;\n                try {\n                    jwk = await crypto.subtle.exportKey('jwk', key);\n                // Our format should be valid and our key extractable\n                /* c8 ignore next 4 */\n                } catch (err) {\n                    reject(err);\n                    return;\n                }\n                resolve({\n                    jwk,\n                    algorithm: key.algorithm,\n                    usages: key.usages\n                });\n            });\n        },\n        revive (obj) {\n            const {\n                jwk, algorithm, usages\n            } = /**\n              * @type {{\n              *   jwk: JsonWebKey,\n              *   algorithm: KeyAlgorithm,\n              *   usages: KeyUsage[]\n              * }}\n              */ (obj);\n\n            return crypto.subtle.importKey(\n                'jwk', jwk, algorithm, true, usages\n            );\n        }\n    }\n};\n\nexport default cryptokey;\n","import {toStringTag} from 'typeson';\nimport {encode, decode} from 'base64-arraybuffer-es6';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst dataview = {\n    dataview: {\n        test (x) { return toStringTag(x) === 'DataView'; },\n        replace (\n            {buffer, byteOffset, byteLength},\n            /**\n             * @type {import('typeson').StateObject & {\n             *  buffers?: ArrayBuffer[]\n             * }}\n             */\n            stateObj\n        ) {\n            if (!stateObj.buffers) {\n                stateObj.buffers = [];\n            }\n            const index = stateObj.buffers.indexOf(buffer);\n            if (index > -1) {\n                return {index, byteOffset, byteLength};\n            }\n            stateObj.buffers.push(buffer);\n            return {\n                encoded: encode(buffer),\n                maxByteLength: buffer.maxByteLength,\n                resizable: buffer.resizable,\n                byteOffset,\n                byteLength\n            };\n        },\n        revive (\n            b64Obj,\n            /**\n             * @type {import('typeson').StateObject & {\n             *  buffers?: ArrayBuffer[]\n             * }}\n             */\n            stateObj\n        ) {\n            if (!stateObj.buffers) {\n                stateObj.buffers = [];\n            }\n            const {\n                byteOffset, byteLength, encoded, index, maxByteLength,\n                resizable\n            } = b64Obj;\n            let buffer;\n            if ('index' in b64Obj) {\n                buffer = stateObj.buffers[index];\n            } else {\n                buffer = decode(\n                    encoded,\n                    // todo[engine:node@>20]: Remove comment\n                    /* c8 ignore next 3 -- Depends on Node version */\n                    resizable\n                        ? {maxByteLength}\n                        : maxByteLength\n                );\n                stateObj.buffers.push(buffer);\n            }\n            return new DataView(buffer, byteOffset, byteLength);\n        }\n    }\n};\n\nexport default dataview;\n","import {toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst date = {\n    date: {\n        test (x) { return toStringTag(x) === 'Date'; },\n        replace (dt) {\n            const time = dt.getTime();\n            if (Number.isNaN(time)) {\n                return 'NaN';\n            }\n            return time;\n        },\n        revive (time) {\n            if (time === 'NaN') {\n                return new Date(Number.NaN);\n            }\n            return new Date(time);\n        }\n    }\n};\n\nexport default date;\n","import {toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst domexception = {\n    domexception: {\n        test (x) { return toStringTag(x) === 'DOMException'; },\n        replace (de) {\n            // `code` is based on `name` and readonly, so no\n            //   need to keep here\n            return {\n                name: de.name,\n                message: de.message\n            };\n        },\n        revive ({message, name}) {\n            return new DOMException(message, name);\n        }\n    }\n};\n\nexport default domexception;\n","/* globals DOMMatrix, DOMMatrixReadOnly -- Polyfills */\nimport {toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst dommatrix = {};\n\n/* c8 ignore next */\nif (typeof DOMMatrix !== 'undefined') {\n    create(DOMMatrix);\n}\n/* c8 ignore next */\nif (typeof DOMMatrixReadOnly !== 'undefined') {\n    create(DOMMatrixReadOnly);\n}\n\n/**\n * @param {typeof DOMMatrix|typeof DOMMatrixReadOnly} Ctor\n * @returns {void}\n */\nfunction create (Ctor) {\n    dommatrix[Ctor.name.toLowerCase()] = {\n        test (x) { return toStringTag(x) === Ctor.name; },\n        replace (dm) {\n            if (dm.is2D) {\n                return {\n                    a: dm.a,\n                    b: dm.b,\n                    c: dm.c,\n                    d: dm.d,\n                    e: dm.e,\n                    f: dm.f\n                };\n            }\n            return {\n                m11: dm.m11,\n                m12: dm.m12,\n                m13: dm.m13,\n                m14: dm.m14,\n                m21: dm.m21,\n                m22: dm.m22,\n                m23: dm.m23,\n                m24: dm.m24,\n                m31: dm.m31,\n                m32: dm.m32,\n                m33: dm.m33,\n                m34: dm.m34,\n                m41: dm.m41,\n                m42: dm.m42,\n                m43: dm.m43,\n                m44: dm.m44\n            };\n        },\n        revive (o) {\n            if (Object.hasOwn(o, 'a')) {\n                return new Ctor([o.a, o.b, o.c, o.d, o.e, o.f]);\n            }\n            return new Ctor([\n                o.m11, o.m12, o.m13, o.m14,\n                o.m21, o.m22, o.m23, o.m24,\n                o.m31, o.m32, o.m33, o.m34,\n                o.m41, o.m42, o.m43, o.m44\n            ]);\n        }\n    };\n}\n\nexport default dommatrix;\n","/* globals DOMPoint, DOMPointReadOnly -- Polyfills */\nimport {toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst dompoint = {};\n\n/* c8 ignore next */\nif (typeof DOMPoint !== 'undefined') {\n    create(DOMPoint);\n}\n/* c8 ignore next */\nif (typeof DOMPointReadOnly !== 'undefined') {\n    create(DOMPointReadOnly);\n}\n\n/**\n * @param {typeof DOMPoint|typeof DOMPointReadOnly} Ctor\n * @returns {void}\n */\nfunction create (Ctor) {\n    dompoint[Ctor.name.toLowerCase()] = {\n        test (x) { return toStringTag(x) === Ctor.name; },\n        replace (dp) {\n            return {\n                x: dp.x,\n                y: dp.y,\n                z: dp.z,\n                w: dp.w\n            };\n        },\n        revive ({x, y, z, w}) {\n            return new Ctor(x, y, z, w);\n        }\n    };\n}\n\nexport default dompoint;\n","/* globals DOMQuad -- Polyfills */\nimport {toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst domquad = {\n    domquad: {\n        test (x) { return toStringTag(x) === 'DOMQuad'; },\n        replace (dp) {\n            return {\n                p1: dp.p1,\n                p2: dp.p2,\n                p3: dp.p3,\n                p4: dp.p4\n            };\n        },\n        revive ({p1, p2, p3, p4}) {\n            return new DOMQuad(p1, p2, p3, p4);\n        }\n    }\n};\n\nexport default domquad;\n","/* globals DOMRect, DOMRectReadOnly -- Polyfills */\nimport {toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst domrect = {};\n\n/* c8 ignore next */\nif (typeof DOMRect !== 'undefined') {\n    create(DOMRect);\n}\n/* c8 ignore next */\nif (typeof DOMRectReadOnly !== 'undefined') {\n    create(DOMRectReadOnly);\n}\n\n/**\n * @param {typeof DOMRect|typeof DOMRectReadOnly} Ctor\n * @returns {void}\n */\nfunction create (Ctor) {\n    domrect[Ctor.name.toLowerCase()] = {\n        test (x) { return toStringTag(x) === Ctor.name; },\n        replace (dr) {\n            return {\n                x: dr.x,\n                y: dr.y,\n                width: dr.width,\n                height: dr.height\n            };\n        },\n        revive ({x, y, width, height}) {\n            return new Ctor(x, y, width, height);\n        }\n    };\n}\n\nexport default domrect;\n","import {toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst error = {\n    error: {\n        test (x) { return toStringTag(x) === 'Error'; },\n        replace ({\n            name, message, cause, stack, fileName, lineNumber, columnNumber\n        }) {\n            return {\n                name, message, cause, stack, fileName, lineNumber, columnNumber\n            };\n        },\n        revive (obj) {\n            const e = /**\n             * @type {{\n             *   name: string,\n             *   cause: Error,\n             *   stack: string,\n             *   fileName?: string,\n             *   lineNumber?: import('typeson').Integer,\n             *   columnNumber?: import('typeson').Integer\n             * }}\n             */ (new Error(obj.message));\n            e.name = obj.name;\n            e.cause = obj.cause;\n            e.stack = obj.stack;\n            e.fileName = obj.fileName;\n            e.lineNumber = obj.lineNumber;\n            e.columnNumber = obj.columnNumber;\n\n            return e;\n        }\n    }\n};\n// See also errors.js that may be registered after having registered this type.\n\nexport default error;\n","/* globals InternalError -- Optional */\nimport {hasConstructorOf} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst errors = {};\n\n// JS standard\n[\n    TypeError, RangeError, SyntaxError, ReferenceError,\n    EvalError, URIError\n].forEach((error) => create(error));\n\n/* c8 ignore next 3 */\nif (typeof AggregateError !== 'undefined') {\n    create(AggregateError);\n}\n\n/* c8 ignore next 5 */\n// @ts-expect-error Non-standard\nif (typeof InternalError === 'function') {\n    // @ts-expect-error Non-standard\n    create(InternalError);\n}\n\n/* eslint-disable jsdoc/valid-types -- https://github.com/jsdoc-type-pratt-parser/jsdoc-type-pratt-parser/issues/131 */\n/**\n * Non-standard.\n * @typedef {{\n *     new (message?: string, options?: ErrorOptions): EvalError;\n * (message?: string, options?: ErrorOptions): EvalError;\n * }} InternalErrorConstructor\n */\n/* eslint-enable jsdoc/valid-types -- https://github.com/jsdoc-type-pratt-parser/jsdoc-type-pratt-parser/issues/131 */\n\n/**\n * Comprises all built-in errors.\n * @param {TypeErrorConstructor|RangeErrorConstructor|\n *   SyntaxErrorConstructor|ReferenceErrorConstructor|\n *   EvalErrorConstructor|URIErrorConstructor|\n *   AggregateErrorConstructor|InternalErrorConstructor\n * } Ctor\n * @returns {void}\n */\nfunction create (Ctor) {\n    errors[Ctor.name.toLowerCase()] = {\n        test (x) { return hasConstructorOf(x, Ctor); },\n        replace ({\n            name, message, cause, stack, fileName,\n            lineNumber, columnNumber, errors: errs\n        }) {\n            return {\n                name, message, cause, stack, fileName,\n                lineNumber, columnNumber, errors: errs\n            };\n        },\n        revive (obj) {\n            const isAggregateError = typeof AggregateError !== 'undefined' &&\n                Ctor === AggregateError;\n            const e = /**\n                * @type {{\n                *   name: string,\n                *   cause: Error,\n                *   stack: string,\n                *   fileName?: string,\n                *   lineNumber?: import('typeson').Integer,\n                *   columnNumber?: import('typeson').Integer\n                * }}\n                */ (isAggregateError\n                    ? new /** @type {AggregateErrorConstructor} */ (\n                        Ctor\n                    )(obj.errors, obj.message)\n                    : new /**\n                    * @type {TypeErrorConstructor|RangeErrorConstructor|\n                    *   SyntaxErrorConstructor|ReferenceErrorConstructor|\n                    *   EvalErrorConstructor|URIErrorConstructor|\n                    *   InternalErrorConstructor}\n                    */ (Ctor)(obj.message));\n\n            e.name = obj.name;\n            e.cause = obj.cause;\n            e.stack = obj.stack;\n            e.fileName = obj.fileName;\n            e.lineNumber = obj.lineNumber;\n            e.columnNumber = obj.columnNumber;\n\n            return e;\n        }\n    };\n}\n\nexport default errors;\n","/* globals XMLHttpRequest, FileReader -- Polyfills */\nimport {TypesonPromise, toStringTag} from 'typeson';\nimport {\n    string2arraybuffer, arraybuffer2string\n} from '../utils/stringArrayBuffer.js';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst file = {\n    file: {\n        test (x) { return toStringTag(x) === 'File'; },\n        replace (f) { // Sync\n            const req = new XMLHttpRequest();\n            req.overrideMimeType('text/plain; charset=x-user-defined');\n            req.open('GET', URL.createObjectURL(f), false); // Sync\n            req.send();\n\n            // Seems not feasible to accurately simulate\n            /* c8 ignore next 3 */\n            if (req.status !== 200 && req.status !== 0) {\n                throw new Error('Bad File access: ' + req.status);\n            }\n            return {\n                type: f.type,\n                stringContents: req.responseText,\n                name: f.name,\n                lastModified: f.lastModified\n            };\n        },\n        revive ({name, type, stringContents, lastModified}) {\n            return new File([string2arraybuffer(stringContents)], name, {\n                type,\n                lastModified\n            });\n        },\n        replaceAsync (f) {\n            return new TypesonPromise(function (resolve, reject) {\n                /*\n                if (f.isClosed) { // On MDN, but not in https://w3c.github.io/FileAPI/#dfn-Blob\n                    reject(new Error('The File is closed'));\n                    return;\n                }\n                */\n                const reader = new FileReader();\n                reader.addEventListener('load', function () {\n                    resolve({\n                        type: f.type,\n                        stringContents: arraybuffer2string(\n                            /** @type {ArrayBuffer} */ (reader.result)\n                        ),\n                        name: f.name,\n                        lastModified: f.lastModified\n                    });\n                });\n                // Seems not feasible to accurately simulate\n                /* c8 ignore next 3 */\n                reader.addEventListener('error', function () {\n                    reject(reader.error);\n                });\n                // eslint-disable-next-line @stylistic/max-len -- Long\n                // eslint-disable-next-line unicorn/prefer-blob-reading-methods -- Too new?\n                reader.readAsArrayBuffer(f);\n            });\n        }\n    }\n};\n\nexport default file;\n","import {toStringTag} from 'typeson';\nimport file from './file.js';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst filelist = {\n    file: file.file,\n    filelist: {\n        test (x) { return toStringTag(x) === 'FileList'; },\n        replace (fl) {\n            const arr = [];\n            for (let i = 0; i < fl.length; i++) {\n                arr[i] = fl.item(i);\n            }\n            return arr;\n        },\n        revive (o) {\n            /**\n             * `FileList` polyfill.\n             */\n            class FileList {\n                /**\n                 * Set private properties and length.\n                 */\n                constructor () {\n                    // eslint-disable-next-line prefer-rest-params -- API\n                    this._files = arguments[0];\n                    this.length = this._files.length;\n                }\n                /**\n                 * @param {import('typeson').Integer} index\n                 * @returns {File}\n                 */\n                item (index) {\n                    return this._files[index];\n                }\n                /* eslint-disable class-methods-use-this -- Not needed */\n                /**\n                 * @returns {\"FileList\"}\n                 */\n                get [Symbol.toStringTag] () {\n                    /* eslint-enable class-methods-use-this -- Not needed */\n                    return 'FileList';\n                }\n            }\n            return new FileList(o);\n        }\n    }\n};\n\nexport default filelist;\n","/* globals document, OffscreenCanvas, createImageBitmap -- Polyfills */\n// `ImageBitmap` is browser / DOM specific. It also can only work\n//  same-domain (or CORS)\n\nimport {toStringTag, TypesonPromise} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst imagebitmap = {\n    imagebitmap: {\n        test (x) {\n            return toStringTag(x) === 'ImageBitmap' ||\n                // In Node, our polyfill sets the dataset on a canvas\n                //  element as JSDom no longer allows overriding toStringTag\n                (x && x.dataset && x.dataset.toStringTag === 'ImageBitmap');\n        },\n        replace (bm) {\n            const canvas = document.createElement('canvas');\n            const ctx = /** @type {CanvasRenderingContext2D} */ (\n                canvas.getContext('2d')\n            );\n            ctx.drawImage(bm, 0, 0);\n            return {\n                width: bm.width, height: bm.height, dataURL: canvas.toDataURL()\n            };\n        },\n        revive (o) {\n            const canvas = typeof OffscreenCanvas === 'undefined'\n                ? document.createElement('canvas')\n                /* c8 ignore next -- Browser only */\n                : new OffscreenCanvas(o.width, o.height);\n            /*\n            var req = new XMLHttpRequest();\n            req.open('GET', o, false); // Sync\n            if (req.status !== 200 && req.status !== 0) {\n              throw new Error('Bad ImageBitmap access: ' + req.status);\n            }\n            req.send();\n            return req.responseText;\n            */\n            const ctx = /** @type {CanvasRenderingContext2D} */ (\n                canvas.getContext('2d')\n            );\n            const img = document.createElement('img');\n            // The onload is needed by some browsers per http://stackoverflow.com/a/4776378/271577\n            img.addEventListener('load', function () {\n                ctx.drawImage(img, 0, 0);\n            });\n            img.src = o.dataURL;\n            // Works in contexts allowing an `ImageBitmap` (We might use\n            //   `OffscreenCanvas.transferToBitmap` when supported)\n            return typeof OffscreenCanvas === 'undefined'\n                ? canvas\n                /* c8 ignore next 3 -- Browser only */\n                : /** @type {OffscreenCanvas} */ (\n                    canvas\n                ).transferToImageBitmap();\n        },\n        reviveAsync (o) {\n            const canvas = document.createElement('canvas');\n            const ctx = /** @type {CanvasRenderingContext2D} */ (\n                canvas.getContext('2d')\n            );\n            const img = document.createElement('img');\n            // The onload is needed by some browsers per http://stackoverflow.com/a/4776378/271577\n            img.addEventListener('load', function () {\n                ctx.drawImage(img, 0, 0);\n            });\n            img.src = o.dataURL;\n\n            return new TypesonPromise(async (resolve, reject) => {\n                try {\n                    const resp = await createImageBitmap(canvas);\n                    resolve(resp);\n                /* c8 ignore next 3 */\n                } catch (err) {\n                    reject(err);\n                }\n            });\n        }\n    }\n};\n\nexport default imagebitmap;\n","/* globals ImageData -- Polyfills */\n// `ImageData` is browser / DOM specific (though `node-canvas` has it\n//   available on `Canvas`).\n\nimport {toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst imagedata = {\n    imagedata: {\n        test (x) { return toStringTag(x) === 'ImageData'; },\n        replace (d) {\n            return {\n                // Ensure `length` gets preserved for revival\n                array: [...d.data],\n                width: d.width,\n                height: d.height\n            };\n        },\n        revive (o) {\n            return new ImageData(\n                new Uint8ClampedArray(o.array), o.width, o.height\n            );\n        }\n    }\n};\n\nexport default imagedata;\n","/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst infinity = {\n    infinity: {\n        test (x) { return x === Number.POSITIVE_INFINITY; },\n        replace (/* n */) { return 'Infinity'; },\n        revive (/* s */) { return Number.POSITIVE_INFINITY; }\n    }\n};\n\nexport default infinity;\n","import {hasConstructorOf} from 'typeson';\n\n/**\n * @type {import('typeson').Spec}\n */\nconst IntlCollator = {\n    test (x) { return hasConstructorOf(x, Intl.Collator); },\n    replace (c) { return c.resolvedOptions(); },\n    revive (options) { return new Intl.Collator(options.locale, options); }\n};\n\n/**\n * @type {import('typeson').Spec}\n */\nconst IntlDateTimeFormat = {\n    test (x) { return hasConstructorOf(x, Intl.DateTimeFormat); },\n    replace (dtf) { return dtf.resolvedOptions(); },\n    revive (options) {\n        return new Intl.DateTimeFormat(options.locale, options);\n    }\n};\n\n/**\n * @type {import('typeson').Spec}\n */\nconst IntlNumberFormat = {\n    test (x) { return hasConstructorOf(x, Intl.NumberFormat); },\n    replace (nf) { return nf.resolvedOptions(); },\n    revive (options) { return new Intl.NumberFormat(options.locale, options); }\n};\n\nconst intlTypes = {\n    IntlCollator,\n    IntlDateTimeFormat,\n    IntlNumberFormat\n};\n\nexport default intlTypes;\n","import {toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst map = {\n    map: {\n        test (x) { return toStringTag(x) === 'Map'; },\n        replace (mp) { return [...mp.entries()]; },\n        revive (entries) { return new Map(entries); }\n    }\n};\n\nexport default map;\n","/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst nan = {\n    nan: {\n        test (x) { return Number.isNaN(x); },\n        replace (/* n */) { return 'NaN'; },\n        revive (/* s */) { return Number.NaN; }\n    }\n};\n\nexport default nan;\n","/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst negativeInfinity = {\n    negativeInfinity: {\n        test (x) { return x === Number.NEGATIVE_INFINITY; },\n        replace (/* n */) { return '-Infinity'; },\n        revive (/* s */) { return Number.NEGATIVE_INFINITY; }\n    }\n};\n\nexport default negativeInfinity;\n","/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst negativeZero = {\n    negativeZero: {\n        test (x) {\n            return Object.is(x, -0);\n        },\n        replace (/* n */) {\n            // Just adding 0 here for minimized space; will still revive as -0\n            return 0;\n        },\n        revive (/* s */) {\n            return -0;\n        }\n    }\n};\n\nexport default negativeZero;\n","import {toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst nonbuiltinIgnore = {\n    nonbuiltinIgnore: {\n        test (x) {\n            return x && typeof x === 'object' && !Array.isArray(x) && ![\n                'Object',\n                // `Proxy` and `Reflect`, two other built-in objects, will also\n                //   have a `toStringTag` of `Object`; we don't want built-in\n                //   function objects, however\n                'Boolean', 'Number', 'String',\n                'Error', 'RegExp', 'Math', 'Date',\n                'Map', 'Set',\n                'JSON',\n                'ArrayBuffer', 'SharedArrayBuffer', 'DataView',\n                'Int8Array', 'Uint8Array', 'Uint8ClampedArray', 'Int16Array',\n                'Uint16Array', 'Int32Array', 'Uint32Array',\n                'Float32Array', 'Float64Array',\n                'Promise',\n                'String Iterator', 'Array Iterator',\n                'Map Iterator', 'Set Iterator',\n                'WeakMap', 'WeakSet',\n                'Atomics', 'Module'\n            ].includes(toStringTag(x));\n        },\n        replace (/* rexp */) {\n            // Not in use\n        }\n    }\n};\n\nexport default nonbuiltinIgnore;\n","// This module is for objectified primitives (such as `new Number(3)` or\n//      `new String(\"foo\")`)\n/* eslint-disable no-new-wrappers, unicorn/new-for-builtins -- Deliberate */\nimport {toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst primitiveObjects = {\n    // String Object (not primitive string which need no type spec)\n    StringObject: {\n        test (x) {\n            return toStringTag(x) === 'String' && typeof x === 'object';\n        },\n        replace: String, // convert to primitive string\n        revive (s) { return new String(s); } // Revive to an objectified string\n    },\n    // Boolean Object (not primitive boolean which need no type spec)\n    BooleanObject: {\n        test (x) {\n            return toStringTag(x) === 'Boolean' &&\n                typeof x === 'object';\n        },\n        replace (o) {\n            // convert to primitive boolean\n            return o.valueOf();\n        },\n        revive (b) {\n            // Revive to an objectified Boolean\n            return new Boolean(b);\n        }\n    },\n    // Number Object (not primitive number which need no type spec)\n    NumberObject: {\n        test (x) {\n            return toStringTag(x) === 'Number' && typeof x === 'object';\n        },\n        replace: Number, // convert to primitive number\n        revive (n) { return new Number(n); } // Revive to an objectified number\n    }\n};\n/* eslint-enable no-new-wrappers, unicorn/new-for-builtins -- Deliberate */\n\nexport default primitiveObjects;\n","import {TypesonPromise, toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst promise = {\n    promise: {\n        test (x) {\n            return toStringTag(x) === 'Promise';\n        },\n        replaceAsync (prom) {\n            return new TypesonPromise(async (resolve) => {\n                try {\n                    resolve({\n                        value: await prom\n                    });\n                } catch (error) {\n                    resolve({\n                        error\n                    });\n                }\n            });\n        },\n        revive (o) {\n            return o.error\n                ? Promise.reject(o.error)\n                : Promise.resolve(o.value);\n        }\n    }\n};\n\nexport default promise;\n","import {toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst regexp = {\n    regexp: {\n        test (x) { return toStringTag(x) === 'RegExp'; },\n        replace (rexp) {\n            return {\n                source: rexp.source,\n                flags: (rexp.global ? 'g' : '') +\n                    (rexp.ignoreCase ? 'i' : '') +\n                    (rexp.multiline ? 'm' : '') +\n                    (rexp.sticky ? 'y' : '') +\n                    (rexp.unicode ? 'u' : '')\n            };\n        },\n        revive ({source, flags}) { return new RegExp(source, flags); }\n    }\n};\n\nexport default regexp;\n","// Here we allow the exact same non-plain object, function, and symbol\n//  instances to be resurrected (assuming the same session/environment);\n//  plain objects are ignored by Typeson so not presently available and\n//  we consciously exclude arrays\n\nimport generateUUID from '../utils/generateUUID.js';\n\n/**\n * @type {{[key: string]: any}}\n */\nconst resurrectableObjectsByUUID = {};\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst resurrectable = {\n    resurrectable: {\n        test (x) {\n            return x &&\n                !Array.isArray(x) &&\n                ['object', 'function', 'symbol'].includes(typeof x);\n        },\n        replace (rsrrctble) {\n            const uuid = generateUUID();\n            resurrectableObjectsByUUID[uuid] = rsrrctble;\n            return uuid;\n        },\n        revive (serializedResurrectable) {\n            return resurrectableObjectsByUUID[serializedResurrectable];\n        }\n    }\n};\n\nexport default resurrectable;\n","import {toStringTag} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst set = {\n    set: {\n        test (x) { return toStringTag(x) === 'Set'; },\n        replace (st) {\n            return [...st.values()];\n        },\n        revive (values) {\n            return new Set(values);\n        }\n    }\n};\n\nexport default set;\n","/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst symbol = {\n    symbol: {\n        test (x) {\n            return typeof x === 'symbol';\n        },\n        replace (sym) {\n            return {\n                global: Symbol.keyFor(sym) !== undefined,\n                sym: String(sym).slice(7, -1)\n            };\n        },\n        revive (o) {\n            return o.global ? Symbol.for(o.sym) : Symbol(o.sym);\n        }\n    }\n};\n\nexport default symbol;\n","import {toStringTag} from 'typeson';\n\n// Support all kinds of typed arrays (views of ArrayBuffers)\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst typedArraysSocketIO = {};\n\n/**\n * @param {Int8ArrayConstructor|Uint8ArrayConstructor|\n *   Uint8ClampedArrayConstructor|Int16ArrayConstructor|\n *   Uint16ArrayConstructor|Int32ArrayConstructor|\n *   Uint32ArrayConstructor|Float32ArrayConstructor|\n *   Float64ArrayConstructor|\n *   BigInt64ArrayConstructor|BigUint64ArrayConstructor\n * } TypedArray\n * @returns {void}\n */\nfunction create (TypedArray) {\n    const typeName = TypedArray.name;\n    typedArraysSocketIO[typeName.toLowerCase()] = {\n        test (x) { return toStringTag(x) === typeName; },\n        replace (a) {\n            return (a.byteOffset === 0 &&\n                a.byteLength === a.buffer.byteLength\n                ? a\n                // socket.io supports streaming ArrayBuffers.\n                // If we have a typed array representing a portion\n                //   of the buffer, we need to clone\n                //   the buffer before leaving it to socket.io.\n                : a.slice(0)).buffer;\n        },\n        revive (buf) {\n            // One may configure socket.io to revive binary data as\n            //    Buffer or Blob.\n            // We should therefore not rely on that the instance we\n            //   get here is an ArrayBuffer\n            // If not, let's assume user wants to receive it as\n            //   configured with socket.io.\n            return toStringTag(buf) === 'ArrayBuffer'\n                ? new TypedArray(buf)\n                : buf;\n        }\n    };\n}\n\nif (typeof Int8Array === 'function') {\n    // Those constructors are added in ES6 as a group.\n    // If we have Int8Array, we can assume the rest also exists.\n\n    [\n        Int8Array,\n        Uint8Array,\n        Uint8ClampedArray,\n        Int16Array,\n        Uint16Array,\n        Int32Array,\n        Uint32Array,\n        Float32Array,\n        Float64Array,\n        ...(typeof BigInt64Array === 'function'\n            ? [BigInt64Array, BigUint64Array]\n            /* c8 ignore next */\n            : [])\n    ].forEach((TypedArray) => create(TypedArray));\n}\n\nexport default typedArraysSocketIO;\n","import {toStringTag} from 'typeson';\nimport {encode, decode} from 'base64-arraybuffer-es6';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst typedArrays = {};\n\n/**\n * @typedef {Int8ArrayConstructor|Uint8ArrayConstructor|\n *   Uint8ClampedArrayConstructor|\n *   Int16ArrayConstructor|Uint16ArrayConstructor|\n *   Int32ArrayConstructor|Uint32ArrayConstructor|\n *   Float32ArrayConstructor|\n *   Float64ArrayConstructor|\n *   BigInt64ArrayConstructor|BigUint64ArrayConstructor} TypedArrayConstructor\n */\n\n/**\n * @param {TypedArrayConstructor} TypedArray\n * @returns {void}\n */\nfunction create (TypedArray) {\n    const typeName = TypedArray.name;\n\n    typedArrays[typeName.toLowerCase()] = {\n        test (x) { return toStringTag(x) === typeName; },\n        replace (\n            {buffer, byteOffset, length: l},\n            /**\n             * @type {import('typeson').StateObject & {\n             *   buffers?: ArrayBuffer[]\n             * }}\n             */\n            stateObj\n        ) {\n            if (!stateObj.buffers) {\n                stateObj.buffers = [];\n            }\n            const index = stateObj.buffers.indexOf(buffer);\n            if (index > -1) {\n                return {index, byteOffset, length: l};\n            }\n            stateObj.buffers.push(buffer);\n            return {\n                maxByteLength: buffer.maxByteLength,\n                resizable: buffer.resizable,\n                encoded: encode(buffer),\n                byteOffset,\n                length: l\n            };\n        },\n        revive (\n            b64Obj,\n            /**\n             * @type {import('typeson').StateObject & {\n             *   buffers?: ArrayBuffer[]\n             * }}\n             */\n            stateObj\n        ) {\n            if (!stateObj.buffers) {\n                stateObj.buffers = [];\n            }\n            const {\n                byteOffset, length: len, encoded, index, maxByteLength,\n                resizable\n            } = b64Obj;\n            let buffer;\n            if ('index' in b64Obj) {\n                buffer = stateObj.buffers[index];\n            } else {\n                buffer = decode(\n                    encoded,\n                    // todo[engine:node@>20]: Remove comment\n                    /* c8 ignore next 3 -- Depends on Node version */\n                    resizable\n                        ? {maxByteLength}\n                        : undefined\n                );\n                stateObj.buffers.push(buffer);\n            }\n            return new TypedArray(buffer, byteOffset, len);\n        }\n    };\n}\n\nif (typeof Int8Array === 'function') {\n    // Those constructors are added in ES6 as a group.\n    // If we have Int8Array, we can assume the rest also exists.\n    [\n        Int8Array,\n        Uint8Array,\n        Uint8ClampedArray,\n        Int16Array,\n        Uint16Array,\n        Int32Array,\n        Uint32Array,\n        Float32Array,\n        Float64Array,\n        ...(typeof BigInt64Array === 'function'\n            ? [BigInt64Array, BigUint64Array]\n            /* c8 ignore next */\n            : [])\n    ].forEach((TypedArray) => create(TypedArray));\n}\n\nexport default typedArrays;\n","// This does not preserve `undefined` in sparse arrays; see the `undef`\n//  or `sparse-undefined` preset\nimport {Undefined} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst undef = {\n    undef: {\n        test (x, stateObj) {\n            return typeof x === 'undefined' &&\n                (stateObj.ownKeys || !('ownKeys' in stateObj));\n        },\n        replace (/* n */) { return 0; },\n        revive (/* s */) {\n            // Will add `undefined` (returning `undefined` would instead\n            //   avoid explicitly setting)\n            return new Undefined();\n        }\n    }\n};\n\nexport default undef;\n","import {isUserObject} from 'typeson';\n\n/**\n * @type {import('typeson').TypeSpecSet}\n */\nconst userObject = {\n    userObject: {\n        test (x /* , stateObj */) { return isUserObject(x); },\n        replace (n) { return {...n}; },\n        revive (s) { return s; }\n    }\n};\n\nexport default userObject;\n","/**\n * @type {import('typeson').Preset}\n */\nconst arrayNonindexKeys = [\n    {\n        arrayNonindexKeys: {\n            testPlainObjects: true,\n            test (x, stateObj) {\n                if (Array.isArray(x)) {\n                    if (\n                        // By avoiding serializing arrays into objects which\n                        //  have only positive-integer keys, we reduce\n                        //  size and improve revival performance; arrays with\n                        //  non-index keys will be larger however\n                        Object.keys(x).some((k) => {\n                            //  No need to check for `isNaN` or\n                            //   `isNaN(Number.parseInt())` as `NaN` will be\n                            //   treated as a string.\n                            //  No need to do check as\n                            //   `Number.parseInt(Number())` since scientific\n                            //   notation will be pre-resolved if a number\n                            //   was given, and it will otherwise be a string\n                            return String(Number.parseInt(k)) !== k;\n                        })\n                    ) {\n                        stateObj.iterateIn = 'object';\n                        stateObj.addLength = true;\n                    }\n                    return true;\n                }\n                return false;\n            },\n            replace (a, stateObj) {\n                // Catch sparse undefined\n                stateObj.iterateUnsetNumeric = true;\n                return a;\n            },\n            revive (o) {\n                if (Array.isArray(o)) {\n                    return o;\n                }\n\n                /**\n                 * @type {{[key: string]: any}}\n                 */\n                const arr = [];\n                // No map here as may be a sparse array (including\n                //   with `length` set)\n                Object.entries(o).forEach(([key, val]) => {\n                    arr[key] = val;\n                });\n                return arr;\n            }\n        }\n    },\n    {\n        sparseUndefined: {\n            test (x, stateObj) {\n                return typeof x === 'undefined' && stateObj.ownKeys === false;\n            },\n            replace (/* n */) { return 0; },\n            revive (/* s */) { return undefined; } // Will avoid adding anything\n        }\n    }\n];\n\nexport default arrayNonindexKeys;\n","import nan from '../types/nan.js';\nimport infinity from '../types/infinity.js';\nimport negativeInfinity from '../types/negative-infinity.js';\nimport negativeZero from '../types/negative-zero.js';\n\n/**\n * @type {import('typeson').Preset}\n */\nconst specialNumbers = [\n    nan,\n    infinity,\n    negativeInfinity,\n    negativeZero\n];\n\nexport default specialNumbers;\n","/* This preset includes types that are built-in into the JavaScript\n    language itself, this should work universally.\n\n  Types that were added in ES6 or beyond will be checked before inclusion\n   so that this module can be consumed by both ES5 and ES6 environments.\n\n  Some types cannot be encapsulated because their inner state is private:\n    `WeakMap`, `WeakSet`.\n\n  The Function type is not included because their closures would not be\n    serialized, so a revived Function that uses closures would not behave\n    as expected.\n\n  Symbols are similarly not included.\n*/\n\nimport arrayNonindexKeys from './array-nonindex-keys.js';\nimport undef from '../types/undef.js';\nimport primitiveObjects from '../types/primitive-objects.js';\nimport specialNumbers from './special-numbers.js';\nimport date from '../types/date.js';\nimport error from '../types/error.js';\nimport errors from '../types/errors.js';\nimport regexp from '../types/regexp.js';\nimport map from '../types/map.js';\nimport set from '../types/set.js';\nimport arraybuffer from '../types/arraybuffer.js';\nimport typedArrays from '../types/typed-arrays.js';\nimport dataview from '../types/dataview.js';\nimport intlTypes from '../types/intl-types.js';\nimport bigint from '../types/bigint.js';\nimport bigintObject from '../types/bigint-object.js';\n\n/**\n * @type {import('typeson').Preset}\n */\nconst expObj = [\n    undef,\n    // ES5\n    arrayNonindexKeys, primitiveObjects, specialNumbers,\n    date, error, errors, regexp\n].concat(\n    // ES2015 (ES6)\n    /* c8 ignore next */\n    typeof Map === 'function' ? map : [],\n    /* c8 ignore next */\n    typeof Set === 'function' ? set : [],\n    /* c8 ignore next */\n    typeof ArrayBuffer === 'function' ? arraybuffer : [],\n    /* c8 ignore next */\n    typeof Uint8Array === 'function' ? typedArrays : [],\n    /* c8 ignore next */\n    typeof DataView === 'function' ? dataview : [],\n    /* c8 ignore next */\n    typeof Intl !== 'undefined' ? intlTypes : [],\n\n    /* c8 ignore next */\n    typeof BigInt !== 'undefined' ? [bigint, bigintObject] : []\n);\nexport default expObj;\n","/*\nWhen communicating via `postMessage()` (`Worker.postMessage()` or\n`window.postMessage()`), the browser will use a similar algorithm as Typeson\ndoes to encapsulate and revive all items in the structure (aka the structured\nclone algorithm). This algorithm supports all built-in types as well as many\nDOM types. Therefore, only types that are not included in the structured clone\nalgorithm need to be registered, which is:\n\n* Error\n* Specific Errors like SyntaxError, TypeError, etc.\n* Any custom type you want to send across window- or worker boundraries\n\nThis preset will only include the Error types and you can register your\ncustom types after having registered these.\n*/\n\nimport error from '../types/error.js';\nimport errors from '../types/errors.js';\n\n/**\n * @type {import('typeson').Preset}\n */\nconst postmessage = [\n    error,\n    errors\n];\n\nexport default postmessage;\n","import builtin from './builtin.js';\nimport typedArraysSocketIO from '../types/typed-arrays-socketio.js';\n\n/**\n * @type {import('typeson').Preset}\n */\nconst socketio = [\n    builtin,\n    // Leave ArrayBuffer as is, and let socket.io stream it instead.\n    {arraybuffer: null},\n    // Encapsulate TypedArrays in ArrayBuffers instead of base64 strings.\n    typedArraysSocketIO\n];\n\nexport default socketio;\n","/**\n * @type {import('typeson').Preset}\n */\nconst sparseUndefined = [\n    {\n        sparseArrays: {\n            testPlainObjects: true,\n            test (x) { return Array.isArray(x); },\n            replace (a, stateObj) {\n                stateObj.iterateUnsetNumeric = true;\n                return a;\n            }\n        }\n    },\n    {\n        sparseUndefined: {\n            test (x, stateObj) {\n                return typeof x === 'undefined' && stateObj.ownKeys === false;\n            },\n            replace (/* n */) { return 0; },\n            revive (/* s */) { return undefined; } // Will avoid adding anything\n        }\n    }\n];\n\nexport default sparseUndefined;\n","/* This preset includes types for the Structured Cloning Algorithm. */\n\nimport userObject from '../types/user-object.js';\nimport arrayNonindexKeys from './array-nonindex-keys.js';\nimport undef from '../types/undef.js';\nimport primitiveObjects from '../types/primitive-objects.js';\nimport specialNumbers from './special-numbers.js';\nimport date from '../types/date.js';\nimport regexp from '../types/regexp.js';\nimport map from '../types/map.js';\nimport set from '../types/set.js';\nimport error from '../types/error.js';\nimport errors from '../types/errors.js';\nimport arraybuffer from '../types/arraybuffer.js';\nimport typedArrays from '../types/typed-arrays.js';\nimport dataview from '../types/dataview.js';\nimport domexception from '../types/domexception.js';\nimport domrect from '../types/domrect.js';\nimport dompoint from '../types/dompoint.js';\nimport domquad from '../types/domquad.js';\nimport dommatrix from '../types/dommatrix.js';\n\nimport imagedata from '../types/imagedata.js';\nimport imagebitmap from '../types/imagebitmap.js'; // Async return\nimport file from '../types/file.js';\nimport filelist from '../types/filelist.js';\nimport blob from '../types/blob.js';\nimport bigint from '../types/bigint.js';\nimport bigintObject from '../types/bigint-object.js';\n\nimport cryptokey from '../types/cryptokey.js';\n\n/**\n * @type {import('typeson').Preset}\n */\nconst expObj = [\n    // ES5\n    userObject, // Processed last (non-builtin)\n\n    undef,\n    arrayNonindexKeys, primitiveObjects, specialNumbers,\n    date, regexp,\n\n    // Non-built-ins\n    imagedata,\n    imagebitmap, // Async return\n    file,\n    filelist,\n    blob,\n    error,\n    errors\n].concat(\n    // ES2015 (ES6)\n    /* c8 ignore next */\n    typeof Map === 'function' ? map : [],\n    /* c8 ignore next */\n    typeof Set === 'function' ? set : [],\n    /* c8 ignore next */\n    typeof ArrayBuffer === 'function' ? arraybuffer : [],\n    /* c8 ignore next */\n    typeof Uint8Array === 'function' ? typedArrays : [],\n    /* c8 ignore next */\n    typeof DataView === 'function' ? dataview : [],\n    /* c8 ignore next */\n    typeof crypto !== 'undefined' ? cryptokey : [],\n    /* c8 ignore next */\n    typeof BigInt !== 'undefined' ? [bigint, bigintObject] : [],\n    /* c8 ignore next */\n    typeof DOMException !== 'undefined' ? domexception : [],\n    /* c8 ignore next */\n    typeof DOMRect !== 'undefined' ? domrect : [],\n    /* c8 ignore next */\n    typeof DOMPoint !== 'undefined' ? dompoint : [],\n    /* c8 ignore next */\n    typeof DOMQuad !== 'undefined' ? domquad : [],\n    /* c8 ignore next */\n    typeof DOMMatrix !== 'undefined' ? dommatrix : []\n);\nexport default expObj;\n","import structuredCloning from './structured-cloning.js';\n\n/**\n * @type {import('typeson').Preset}\n */\nconst structuredCloningThrowing = structuredCloning.concat({\n    checkDataCloneException: {\n        test (val) {\n            // Should also throw with:\n            // 1. `IsDetachedBuffer` (a process not called within the\n            //      ECMAScript spec)\n            // 2. `IsCallable` (covered by `typeof === 'function'` or a\n            //       function's `toStringTag`)\n            // 3. internal slots besides [[Prototype]] or [[Extensible]] (e.g.,\n            //        [[PromiseState]] or [[WeakMapData]])\n            // 4. exotic object (e.g., `Proxy`) (unless an `%ObjectPrototype%`\n            //      intrinsic object) (which does not have default\n            //      behavior for one or more of the essential internal methods\n            //      that are limited to the following for non-function objects\n            //      (we auto-exclude functions):\n            //      [[GetPrototypeOf]],[[SetPrototypeOf]],[[IsExtensible]],\n            //      [[PreventExtensions]],[[GetOwnProperty]],\n            //      [[DefineOwnProperty]],[[HasProperty]],\n            //      [[Get]],[[Set]],[[Delete]],[[OwnPropertyKeys]]);\n            //      except for the standard, built-in exotic objects, we'd need\n            //      to know whether these methods had distinct behaviors\n            // Note: There is no apparent way for us to detect a `Proxy` and\n            //      reject (Chrome at least is not rejecting anyways)\n            const stringTag = ({}.toString.call(val).slice(8, -1));\n            if (\n                [\n                    // Symbol's `toStringTag` is only \"Symbol\" for its initial\n                    //   value, so we check `typeof`\n                    'symbol',\n                    // All functions including bound function exotic objects\n                    'function'\n                ].includes(typeof val) ||\n                [\n                    // A non-array exotic object\n                    'Arguments',\n                    // A non-array exotic object\n                    'Module',\n                    // Promise instances have an extra slot ([[PromiseState]])\n                    //    but not throwing in Chrome `postMessage`\n                    'Promise',\n                    // WeakMap instances have an extra slot ([[WeakMapData]])\n                    //    but not throwing in Chrome `postMessage`\n                    'WeakMap',\n                    // WeakSet instances have an extra slot ([[WeakSetData]])\n                    //    but not throwing in Chrome `postMessage`\n                    'WeakSet',\n\n                    // HTML-SPECIFIC\n                    'Event',\n                    // Also in Node `worker_threads` (currently experimental)\n                    'MessageChannel'\n                ].includes(stringTag) ||\n                /*\n                // isClosed is no longer documented\n                ((stringTag === 'Blob' || stringTag === 'File') &&\n                    val.isClosed) ||\n                */\n                (val && typeof val === 'object' &&\n                    // Duck-type DOM node objects (non-array exotic?\n                    //    objects which cannot be cloned by the SCA)\n                    typeof val.nodeType === 'number' &&\n                    typeof val.insertBefore === 'function')\n            ) {\n                throw new DOMException(\n                    'The object cannot be cloned.', 'DataCloneError'\n                );\n            }\n            return false;\n        }\n    }\n});\n\nexport default structuredCloningThrowing;\n","import sparseUndefined from './sparse-undefined.js';\nimport undf from '../types/undef.js';\n\n/**\n * @type {import('typeson').Preset}\n */\nconst undef = [\n    sparseUndefined,\n    undf\n];\n\nexport default undef;\n","import builtin from './builtin.js';\n\n/**\n * @type {import('typeson').Preset}\n */\nconst universal = [\n    builtin\n    // TODO: Add types that are de-facto universal even though not\n    //   built-in into ecmasript standard.\n];\n\nexport default universal;\n"],"names":["ownKeys","e","t","r","Object","keys","getOwnPropertySymbols","n","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","TypeError","_createClass","_defineProperties","configurable","writable","_toPropertyKey","key","value","_slicedToArray","_arrayWithHoles","Array","isArray","_iterableToArrayLimit","o","i","a","c","s","u","call","next","done","return","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","slice","name","from","test","_toPrimitive","toPrimitive","String","Number","TypesonPromise","this","p","Promise","__typeson__type__","toStringTag","get","then","catch","reject","resolve","all","map","race","allSettled","hasOwn","getPrototypeOf","isThenable","isObject","hasConstructorOf","Function","isPlainObject","isUserObject","escapeKeyPathComponent","replaceAll","replace","unescapeKeyPathComponent","getByKeyPath","indexOf","setAtKeyPath","getJSONType","_await","_async","nestedPathsFirst","keypath","match","Typeson","options","plainObjectReplacers","nonplainObjectReplacers","revivers","types","stringify","stringification","encapsulate","JSON","stringifySync","throwOnBadSyncType","sync","stringifyAsync","parse","revive","parseSync","parseAsync","specialTypeNames","returnTypeNames","rootTypeName","iterateNone","l","y","f","v","h","cyclic","d","encapsulateObserver","b","finish","values","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Set","$types","$","_","splice","m","_invoke","O","_adaptBuiltinStateObjectProperties","assign","_encapsulate","g","type","stateObj","promisesData","resolvingTypesonPromise","awaitingTypesonPromise","includes","isNaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","replaced","j","iterateIn","iterateUnsetNumeric","S","cyclicKeypath","P","T","w","A","C","clone","ArrayBuffer","addLength","k","_loop","Boolean","N","endIterateIn","end","endIterateOwn","I","E","_loop2","concat","K","endIterateUnsetNumeric","replaceAsync","typeDetected","replacing","encapsulateSync","encapsulateAsync","finishRevival","executeReviver","Error","reviveAsync","checkUndefined","revivePlainObjects","entries","plain","sort","reduce","reducer","_revive","set","reviveSync","register","R","testPlainObjects","create","bind","fallback","Undefined","chars","lookup","Uint8Array","codePointAt","encode","arraybuffer","byteOffset","lngth","byteLength","bytes","len","base64","_i","decode","encoded1","encoded2","encoded3","encoded4","bufferLength","_i2","x","buffers","index","maxByteLength","resizable","b64","buffer","undefined","bigintObject","BigInt","bigint","arraybuffer2string","buf","byte","fromCodePoint","string2arraybuffer","str","array","charCodeAt","blob","req","XMLHttpRequest","overrideMimeType","open","URL","createObjectURL","send","status","stringContents","responseText","obj","Blob","reader","FileReader","addEventListener","error","readAsArrayBuffer","generateUUID","Date","now","Math","trunc","random","floor","cloneableObjectsByUUID","cloneable","for","clonable","encapsulated","uuid","cryptokey","extractable","async","jwk","crypto","subtle","exportKey","err","algorithm","usages","importKey","dataview","encoded","b64Obj","DataView","date","dt","time","getTime","NaN","domexception","de","message","DOMException","dommatrix","Ctor","toLowerCase","dm","is2D","m11","m12","m13","m14","m21","m22","m23","m24","m31","m32","m33","m34","m41","m42","m43","m44","DOMMatrix","DOMMatrixReadOnly","dompoint","dp","z","DOMPoint","DOMPointReadOnly","domquad","p1","p2","p3","p4","DOMQuad","domrect","dr","width","height","DOMRect","DOMRectReadOnly","cause","stack","fileName","lineNumber","columnNumber","errors","errs","AggregateError","RangeError","SyntaxError","ReferenceError","EvalError","URIError","InternalError","file","lastModified","File","filelist","fl","arr","item","FileList","_files","imagebitmap","dataset","bm","canvas","document","createElement","getContext","drawImage","dataURL","toDataURL","OffscreenCanvas","ctx","img","src","transferToImageBitmap","createImageBitmap","imagedata","data","ImageData","Uint8ClampedArray","infinity","IntlCollator","Intl","Collator","resolvedOptions","locale","intlTypes","IntlDateTimeFormat","DateTimeFormat","dtf","IntlNumberFormat","NumberFormat","nf","mp","Map","nan","negativeInfinity","negativeZero","is","nonbuiltinIgnore","primitiveObjects","StringObject","BooleanObject","valueOf","NumberObject","promise","prom","regexp","rexp","source","flags","global","ignoreCase","multiline","sticky","unicode","RegExp","resurrectableObjectsByUUID","resurrectable","rsrrctble","serializedResurrectable","st","symbol","sym","keyFor","typedArraysSocketIO","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","TypedArray","typeName","typedArrays","undef","userObject","arrayNonindexKeys","some","parseInt","val","sparseUndefined","specialNumbers","expObj","postmessage","socketio","builtin","sparseArrays","structuredCloningThrowing","structuredCloning","checkDataCloneException","stringTag","nodeType","insertBefore","undf","universal"],"mappings":"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","x_google_ignoreList":[0,1]}